// <auto-generated />
using Equipe.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Equipe.Infrastructure.Migrations
{
    [DbContext(typeof(EquipeDbContext))]
    partial class EquipeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.AtletaData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ComprovanteMatricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DocumentoId")
                        .HasColumnType("integer");

                    b.Property<int>("Genero")
                        .HasColumnType("integer");

                    b.Property<int>("IdAtleta")
                        .HasColumnType("integer");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atleta", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.DocumentoData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Passaporte")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Documento", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.EnderecoData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Endereco", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.EquipeAtleta", b =>
                {
                    b.Property<int>("IdEquipe")
                        .HasColumnType("integer");

                    b.Property<int>("IdAtleta")
                        .HasColumnType("integer");

                    b.HasKey("IdEquipe", "IdAtleta");

                    b.HasIndex("IdAtleta");

                    b.ToTable("EquipeAtleta", (string)null);
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.EquipeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GinasioId")
                        .HasColumnType("integer");

                    b.Property<int>("IdGinasio")
                        .HasColumnType("integer");

                    b.Property<int>("Modalidade")
                        .HasColumnType("integer");

                    b.Property<int>("NivelEquipe")
                        .HasColumnType("integer");

                    b.Property<string>("NomeEquipe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("NonTumbling")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoEquipe")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GinasioId");

                    b.ToTable("Equipe", (string)null);
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.GinasioData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Ginasio", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.UsuarioData", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.AtletaData", b =>
                {
                    b.HasOne("Equipe.Infrastructure.Data.Models.DocumentoData", "Documento")
                        .WithMany()
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipe.Infrastructure.Data.Models.UsuarioData", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Documento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.EquipeAtleta", b =>
                {
                    b.HasOne("Equipe.Infrastructure.Data.Models.AtletaData", "Atleta")
                        .WithMany("EquipeAtletas")
                        .HasForeignKey("IdAtleta");

                    b.HasOne("Equipe.Infrastructure.Data.Models.EquipeData", "Equipe")
                        .WithMany("EquipeAtletas")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atleta");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.EquipeData", b =>
                {
                    b.HasOne("Equipe.Infrastructure.Data.Models.GinasioData", "Ginasio")
                        .WithMany()
                        .HasForeignKey("GinasioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ginasio");
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.GinasioData", b =>
                {
                    b.HasOne("Equipe.Infrastructure.Data.Models.EnderecoData", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.AtletaData", b =>
                {
                    b.Navigation("EquipeAtletas");
                });

            modelBuilder.Entity("Equipe.Infrastructure.Data.Models.EquipeData", b =>
                {
                    b.Navigation("EquipeAtletas");
                });
#pragma warning restore 612, 618
        }
    }
}
